plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.7.5'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.5'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.5'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    runtimeOnly 'com.h2database:h2:2.1.214'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
}

group = 'com.example'
version = '1.0.0'
description = 'amdm_parser'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    into "$buildDir/lib"
}

jar {
    manifest {
        attributes["Main-Class"] = "bootJarMainClassName"
        attributes["Class-Path"] = configurations.runtimeClasspath.collect { 'lib/' + it.getName() }.join(' ')
    }
}

task buildDocker(type: Exec) {
    dependsOn copyDependencies, build
    workingDir "$projectDir"
    commandLine 'docker', 'build', '--rm', '.', '-t', "test", "-f", "$projectDir/src/main/docker/Dockerfile"
}

task runDocker(type: Exec) {
    dependsOn buildDocker
    workingDir "$projectDir"
    commandLine 'docker', 'run', "$project.group/$project.name:$project.version"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
